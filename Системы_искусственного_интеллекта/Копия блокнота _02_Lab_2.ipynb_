{"cells":[{"cell_type":"markdown","id":"70a20d37","metadata":{"id":"70a20d37"},"source":["# Лабораторная работа №2\n"]},{"cell_type":"markdown","id":"d757bc60","metadata":{"id":"d757bc60"},"source":["Предлагается решить 10 задач на закрепление синтаксиса и наработки навыка решения типовых задач, с которыми далее вы столкнетесь в том или ином виде.\n","\n","Напоминаю: гуглить - залог успеха."]},{"cell_type":"markdown","id":"58100ed1","metadata":{"id":"58100ed1"},"source":["### Задача 1.\n","\n","Дан список случайных целых чисел arr.\n","\n","Реализуйте функцию, которая будет принимать список и возвращать кортеж состояющий из:\n","1) Максимума\n","\n","2) Минимума\n","\n","3) Среднего\n","\n","4) Медианы\n"]},{"cell_type":"code","execution_count":null,"id":"73884582","metadata":{"id":"73884582"},"outputs":[],"source":["# Здесь ничего менять не надо, это исходные данные с которыми будете работать\n","import random\n","\n","# в arr будет записан список из 50 случайных целых чисел в диапазоне от -100 до 100\n","arr = random.sample(range(-100, 100), 50)"]},{"cell_type":"code","execution_count":null,"id":"ae2484b8","metadata":{"id":"ae2484b8","outputId":"4f5e7fb9-88a6-43ba-c2cd-54659a0ecf3a"},"outputs":[{"name":"stdout","output_type":"stream","text":["[-39, -27, -6, -80, -63, 85, 80, 20, 48, 59, 76, 77, -23, 58, 49, 84, -14, -90, -61, 69, -15, -3, -89, -74, 93, 40, -54, -75, 4, 6, -57, -1, -8, 61, 31, -91, 35, -100, -73, -51, 28, 63, 16, 45, -19, 54, 27, -11, -5, -40]\n"]}],"source":["# Убедимся в этом\n","print(arr)"]},{"cell_type":"code","execution_count":null,"id":"2bdf05f1","metadata":{"id":"2bdf05f1","executionInfo":{"status":"ok","timestamp":1695113922191,"user_tz":-240,"elapsed":321,"user":{"displayName":"","userId":""}},"outputId":"de4a28d3-23ca-4358-b04e-19bd46cf7e6b","colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"stream","name":"stdout","text":["[-69, -91, 21, -83, -82, 81, -5, 73, 69, 56, -66, 72, -62, -49, 82, 77, 71, 41, -81, 33, -3, -27, 40, -7, 5, -20, -11, 52, -15, 51, -41, 88, -53, 38, -12, -84, 70, -57, 42, -56, -52, 61, 55, 39, 27, -73, -79, 64, 15, 31]\n","(88, -91, 3.52, 10.0)\n"]}],"source":["import random\n","arr = random.sample(range(-100, 100), 50)\n","\n","print(arr)\n","\n","\n","def list_stat(arr):\n","    arr2 = arr.copy()\n","    arr2.sort()\n","    ind_mediana = len(arr2) // 2\n","    if (len(arr2) % 2 != 0):\n","        mediana = arr2[ind_mediana]\n","    else:\n","        mediana = (arr2[ind_mediana - 1] + arr2[ind_mediana]) / 2\n","    tup = (max(arr), min(arr), sum(arr)/len(arr), mediana)\n","    return tup\n","\n","print(list_stat(arr))"]},{"cell_type":"code","execution_count":null,"id":"82749c0a","metadata":{"id":"82749c0a","outputId":"a87fad3e-b826-4753-80e6-67398a22851d"},"outputs":[{"name":"stdout","output_type":"stream","text":["None\n"]}],"source":["print(list_stat(arr))"]},{"cell_type":"markdown","id":"8dcc297d","metadata":{"id":"8dcc297d"},"source":["### Задача 2.\n","\n","Дан список из предыдущей задачи.\n","\n","Создайте функцию, которая принимает список и возвращает отсортированный по убыванию список из которого удалены все ОТРИЦАТЕЛЬНЫЕ ЧЕТНЫЕ числа.\n","\n","Подсказка: можно решить итеративно в лоб, добавляя в новый список требуемые элементы. Либо использовать filter(), про который можно прочесть в документации (потребуется посмотреть еще лямбда-функции)."]},{"cell_type":"code","execution_count":null,"id":"eada7f6d","metadata":{"id":"eada7f6d","executionInfo":{"status":"ok","timestamp":1695461991833,"user_tz":-240,"elapsed":383,"user":{"displayName":"Полина Зиновьева","userId":"15849269375264551829"}},"outputId":"b6480fe9-f981-48a5-ee78-142fc8a15056","colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"stream","name":"stdout","text":["[3, -75, 78, -44, -55, -87, -94, 79, -86, -11, -51, 38, 64, -61, -12, 44, 99, 13, -82, -45, -70, -60, 34, 16, 10, 17, 2, -29, 86, 98, -17, 41, -27, -78, 56, 6, -62, -93, 71, -28, 58, 77, -65, 4, -21, 52, 55, -99, -39, -63]\n","[99, 98, 86, 79, 78, 77, 71, 64, 58, 56, 55, 52, 44, 41, 38, 34, 17, 16, 13, 10, 6, 4, 3, 2, -11, -17, -21, -27, -29, -39, -45, -51, -55, -61, -63, -65, -75, -87, -93, -99]\n"]}],"source":["import random\n","arr = random.sample(range(-100, 100), 50)\n","\n","print(arr)\n","\n","def function(arr):\n","  arr2 = list(filter(lambda x: (x > 0) or (x % 2 != 0) , arr))\n","  arr2.sort(reverse=True)\n","  print(arr2)\n","\n","function(arr)\n"]},{"cell_type":"markdown","id":"d00b2c0e","metadata":{"id":"d00b2c0e"},"source":["### Задача 3.\n","\n","Дана строка.\n","\n","Создайте функцию, которая принимает строку и возвращает кортеж из количества уникальных слов и длины строки. Регистр не является признаком уникальности слова, т.е. Pump и pump равнозначны.\n","\n","Подсказка: прочитайте про функцию split(). Обратите внимание, что нужно удалить все знаки препинания."]},{"cell_type":"code","execution_count":null,"id":"b438bac9","metadata":{"id":"b438bac9"},"outputs":[],"source":["s = 'On the other hand, we denounce with righteous indignation and \\\n","dislike men who are so beguiled and demoralized by the charms of \\\n","pleasure of the moment, so blinded by desire, that they cannot \\\n","foresee the pain and trouble that are bound to ensue; and equal \\\n","blame belongs to those who fail in their duty through weakness of will, \\\n","which is the same as saying through shrinking from toil and pain.'\n"]},{"cell_type":"code","execution_count":null,"id":"761bc35c","metadata":{"id":"761bc35c","executionInfo":{"status":"ok","timestamp":1695462041622,"user_tz":-240,"elapsed":383,"user":{"displayName":"Полина Зиновьева","userId":"15849269375264551829"}},"outputId":"deac6afe-2598-44f4-f731-fd8b18a07827","colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"stream","name":"stdout","text":["(52, 386)\n"]}],"source":["s = 'On the other hand, we denounce with righteous indignation and \\\n","dislike men who are so beguiled and demoralized by the charms of \\\n","pleasure of the moment, so blinded by desire, that they cannot \\\n","foresee the pain and trouble that are bound to ensue; and equal \\\n","blame belongs to those who fail in their duty through weakness of will, \\\n","which is the same as saying through shrinking from toil and pain.'\n","\n","def function(s):\n","  s = s.lower()\n","  s = s.replace(\",\", \"\").replace(\".\", \"\")\n","  set_s = set(s.split(\" \"))\n","  tup = (len(set_s), len(s))\n","  return tup\n","\n","print(function(s))"]},{"cell_type":"markdown","id":"1f412e93","metadata":{"id":"1f412e93"},"source":["### Задача 4\n","\n","Дана строка из задачи выше.\n","\n","Создайте функцию, которая принимает строку и считает количество упоминаний каждого слова и возвращает ответ в виде словаря.\n","Выведите этот словарь."]},{"cell_type":"code","execution_count":null,"id":"120a8592","metadata":{"id":"120a8592","executionInfo":{"status":"ok","timestamp":1695462051150,"user_tz":-240,"elapsed":385,"user":{"displayName":"Полина Зиновьева","userId":"15849269375264551829"}},"outputId":"b03a5f62-05d5-4ac4-e992-6d98800ac722","colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"stream","name":"stdout","text":["{'saying': 1, 'righteous': 1, 'belongs': 1, 'bound': 1, 'will': 1, 'cannot': 1, 'dislike': 1, 'foresee': 1, 'other': 1, 'which': 1, 'they': 1, 'fail': 1, 'and': 5, 'blinded': 1, 'their': 1, 'of': 3, 'we': 1, 'are': 2, 'that': 2, 'is': 1, 'as': 1, 'on': 1, 'denounce': 1, 'weakness': 1, 'ensue;': 1, 'from': 1, 'moment': 1, 'indignation': 1, 'equal': 1, 'demoralized': 1, 'beguiled': 1, 'those': 1, 'shrinking': 1, 'in': 1, 'by': 2, 'trouble': 1, 'pain': 2, 'same': 1, 'with': 1, 'hand': 1, 'who': 2, 'blame': 1, 'to': 2, 'toil': 1, 'desire': 1, 'duty': 1, 'men': 1, 'through': 2, 'so': 2, 'the': 5, 'pleasure': 1, 'charms': 1}\n"]}],"source":["s = 'On the other hand, we denounce with righteous indignation and \\\n","dislike men who are so beguiled and demoralized by the charms of \\\n","pleasure of the moment, so blinded by desire, that they cannot \\\n","foresee the pain and trouble that are bound to ensue; and equal \\\n","blame belongs to those who fail in their duty through weakness of will, \\\n","which is the same as saying through shrinking from toil and pain.'\n","\n","def function(s):\n","  s = s.lower()\n","  s = s.replace(\",\", \"\").replace(\".\", \"\")\n","  arr_s = s.split(\" \")\n","  set_s = set(s.split(\" \"))\n","  d = {}\n","  for s in set_s:\n","      count = 0\n","      for i in range(0, len(arr_s)):\n","          if (s == arr_s[i]):\n","              count += 1\n","      d.update({s:count})\n","  return d\n","\n","print(function(s))"]},{"cell_type":"markdown","id":"c5fdf1e0","metadata":{"id":"c5fdf1e0"},"source":["### Задача 5\n","\n","Дана строка из задачи выше.\n","\n","Создайте функцию, которая принимает строку и удаляет все слова начинающиеся на t (регистр не имеет значения) и возвращает полученную строку."]},{"cell_type":"code","execution_count":null,"id":"e37dadf6","metadata":{"id":"e37dadf6","executionInfo":{"status":"ok","timestamp":1695125785535,"user_tz":-240,"elapsed":328,"user":{"displayName":"","userId":""}},"outputId":"eeef5f09-d71b-45ad-9905-81d4f6b18fb8","colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"stream","name":"stdout","text":["On other hand, we denounce with righteous indignation and dislike men who are so beguiled and demoralized by charms of pleasure of moment, so blinded by desire, cannot foresee pain and are bound ensue; and equal blame belongs who fail in duty weakness of will, which is same as saying shrinking from and pain.\n"]}],"source":["s = 'On the other hand, we denounce with righteous indignation and \\\n","dislike men who are so beguiled and demoralized by the charms of \\\n","pleasure of the moment, so blinded by desire, that they cannot \\\n","foresee the pain and trouble that are bound to ensue; and equal \\\n","blame belongs to those who fail in their duty through weakness of will, \\\n","which is the same as saying through shrinking from toil and pain.'\n","\n","def function(sstr):\n","  arr_str = sstr.split(\" \")\n","  words_to_delete = []\n","  for s in arr_str:\n","    for i in range(0, len(sstr)):\n","      if (s[0] == 't' or s[0] == 'T'):\n","        words_to_delete.append(s)\n","\n","  filtered_str = ' '.join((filter(lambda s: s not in words_to_delete, arr_str)))\n","  return filtered_str\n","\n","print(function(s))"]},{"cell_type":"markdown","id":"1a6dd5d2","metadata":{"id":"1a6dd5d2"},"source":["### Задача 6\n","\n","Дана строка из задачи выше.\n","\n","Посчитайте количество глассных и согласных букв. Выведите результат."]},{"cell_type":"code","execution_count":null,"id":"c53467dc","metadata":{"id":"c53467dc","executionInfo":{"status":"ok","timestamp":1695126606522,"user_tz":-240,"elapsed":290,"user":{"displayName":"","userId":""}},"outputId":"4089450c-b661-4cc3-c82f-d6d3a7850dee","colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"stream","name":"stdout","text":["128\n","188\n"]}],"source":["s = 'On the other hand, we denounce with righteous indignation and \\\n","dislike men who are so beguiled and demoralized by the charms of \\\n","pleasure of the moment, so blinded by desire, that they cannot \\\n","foresee the pain and trouble that are bound to ensue; and equal \\\n","blame belongs to those who fail in their duty through weakness of will, \\\n","which is the same as saying through shrinking from toil and pain.'\n","\n","def function(sstr):\n","  sstr = sstr.lower()\n","  vowels = ['a', 'e', 'i', 'o', 'u', 'y']\n","  consonants = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'z']\n","  count_vowels = 0\n","  count_consonants = 0\n","  for v in vowels:\n","    count_vowels += sstr.count(v)\n","  for c in consonants:\n","    count_consonants += sstr.count(c)\n","  print(count_vowels)\n","  print(count_consonants)\n","\n","function(s)"]},{"cell_type":"markdown","id":"0fb06cef","metadata":{"id":"0fb06cef"},"source":["### Задача 7\n","Из приложенного файла lab_2.txt считать текст.\n","\n","Посчитайте количество предложений в нем и выведите."]},{"cell_type":"code","execution_count":null,"id":"1993a351","metadata":{"id":"1993a351","executionInfo":{"status":"ok","timestamp":1695462865202,"user_tz":-240,"elapsed":378,"user":{"displayName":"Полина Зиновьева","userId":"15849269375264551829"}},"outputId":"4d948eee-c5c6-4953-c8e6-a7b6cf56da87","colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"stream","name":"stdout","text":["57\n"]}],"source":["my_file = open('lab2.txt', 'r')\n","text = my_file.read()\n","count = text.count(\".\")\n","print(count)"]},{"cell_type":"markdown","id":"ab52fde5","metadata":{"id":"ab52fde5"},"source":["### Задача 8\n","Заданы два вектора.\n","\n","Напишите функцию которая принимает два списка и возвращает значение их скалярного произведения."]},{"cell_type":"code","execution_count":null,"id":"1ecb0506","metadata":{"id":"1ecb0506"},"outputs":[],"source":["vec_1 = [0, 1, 15]\n","vec_2 = [2, 4, 3]"]},{"cell_type":"code","execution_count":null,"id":"23d6cfb2","metadata":{"id":"23d6cfb2","executionInfo":{"status":"ok","timestamp":1695462426816,"user_tz":-240,"elapsed":1057,"user":{"displayName":"Полина Зиновьева","userId":"15849269375264551829"}},"outputId":"ba7e0641-bb26-46cc-82ca-271c906667f7","colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"stream","name":"stdout","text":["49\n"]}],"source":["vec_1 = [0, 1, 15]\n","vec_2 = [2, 4, 3]\n","\n","def function(vec_1, vec_2):\n","  if len(vec_1) != len(vec_2):\n","    return \"Разные длины векторов\"\n","\n","  result = 0\n","  for i in range(0, len(vec_1)):\n","    result += vec_1[i] * vec_2[i]\n","  return result\n","\n","print(function(vec_1, vec_2))\n"]},{"cell_type":"markdown","id":"b98c42a0","metadata":{"id":"b98c42a0"},"source":["### *Задача 9\n","\n","Дан список состоящий из пар натуральных чисел и одного непарного числа. Найти это число и вывести.\n","\n","Подсказка: можно и нужно использовать оператор XOR. Другие варианты тоже сойдут."]},{"cell_type":"code","execution_count":null,"id":"a6484592","metadata":{"id":"a6484592"},"outputs":[],"source":["list_with_forever_alone = [2, 1, 3, 3, 1, 5, 2, 6, 9, 8, 8, 9, 2, 6, 5, 3, 2]"]},{"cell_type":"code","execution_count":null,"id":"dc8bf703","metadata":{"id":"dc8bf703","executionInfo":{"status":"ok","timestamp":1695462442683,"user_tz":-240,"elapsed":414,"user":{"displayName":"Полина Зиновьева","userId":"15849269375264551829"}},"outputId":"29fc2585-12e5-435a-824e-f966c36571e7","colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"stream","name":"stdout","text":["Непарное число: [3]\n"]}],"source":["list_with_forever_alone = [2, 1, 3, 3, 1, 5, 2, 6, 9, 8, 8, 9, 2, 6, 5, 3, 2]\n","\n","my_stack = []\n","\n","for i in range(0, len(list_with_forever_alone)):\n","  if list_with_forever_alone[i] in my_stack:\n","    my_stack.remove(list_with_forever_alone[i])\n","  else:\n","    my_stack.append(list_with_forever_alone[i])\n","print(\"Непарное число:\", my_stack)"]},{"cell_type":"markdown","id":"58c7a367","metadata":{"id":"58c7a367"},"source":["### *Задача 10\n","\n","Дан список натуральных чисел. Вывести все числа, являющиеся степенью двойки."]},{"cell_type":"code","execution_count":null,"id":"9adc83bd","metadata":{"id":"9adc83bd"},"outputs":[],"source":["list_with_power_two = [24, 13, 25, 32, 17, 8, 2, 14, 0, 16, 1]"]},{"cell_type":"code","execution_count":null,"id":"c69960d9","metadata":{"id":"c69960d9","executionInfo":{"status":"ok","timestamp":1695462446109,"user_tz":-240,"elapsed":11,"user":{"displayName":"Полина Зиновьева","userId":"15849269375264551829"}},"outputId":"df5e5182-127d-4222-9dc5-adf8c90f750a","colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"stream","name":"stdout","text":["1\n","2\n","8\n","16\n","32\n"]}],"source":["list_with_power_two = [24, 13, 25, 32, 17, 8, 2, 14, 0, 16, 1]\n","stepen = 0\n","max_stepen = pow(max(list_with_power_two), 1/2)\n","while stepen <= max_stepen:\n","    a = pow(2, stepen)\n","    if a in list_with_power_two:\n","        for i in range(0, list_with_power_two.count(a)):\n","            print(pow(2, stepen))\n","    stepen += 1"]}],"metadata":{"kernelspec":{"display_name":"Python 3 (ipykernel)","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.9.6"},"colab":{"provenance":[{"file_id":"https://github.com/Daikon46/AISys_SamU/blob/main/Labs1-Python/02_Lab_2.ipynb","timestamp":1695138124993}]}},"nbformat":4,"nbformat_minor":5}